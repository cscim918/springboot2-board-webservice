language: java
jdk:
  - openjdk8

branches: # Travis CI를 어느 브랜치가 푸시될 때 수행할지 지정
  only:
    - master

# Travis CI 서버의 Home
cache: # 같은 의존성은 다음 배포 때부터 다시 받지 않도록 설정
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

script: "./gradlew clean build" # master 브랜치에 푸시되었을 때 수행하는 명령어

before_deploy: # deploy 명령어가 실행되기 전에 수행
  - zip -r springboot2-board-webservice * # 현재 위치의 모든 파일을 프로젝트 이름으로 압축
  - mkdir -p deploy # deploy라는 디렉토리를 Travis CI가 실행중인 위치에서 생성
  - mv springboot2-board-webservice.zip deploy/springboot2-board-webservice.zip # zip파일을 deploy/springboot2-board-webservice로 이동

deploy:
  - provide: s3
    access_key_id: $AWS_ACCESS_KEY # Travis repo seetings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
    bucket: springboot2-yunbo-build # S3 버킷
    region: ap-northeast-2
    skip_cleanup: true
    acl: private # zip 파일 접근을 private으로
    local_dir: deploy # before_deploy에서 생성한 디렉토리
    wait-until-deployed: true

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값

    bucket: springboot2-yunbo-build # S3 버킷
    key: springboot2-board-webservice.zip # 빌드 파일을 압축해서 전달

    bundle_type: zip # 압축 확장자
    application: springboot2-board-webservice # 웹 콘솔에서 등록한 CodeDeploy 애플리케이션
    deployment_group: springboot2-board-webservice-group # 웹 콘솔에서 등록한 CodeDeploy 배포 그룹
    region: ap-northeast-2
    wait-until-deployed: true

# CI 실행 완료 시 메일로 알람
notifications:
  email:
    recipients:
      - cscim5@naver.com
